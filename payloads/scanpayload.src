
MTXPayload                  = get_custom_object.MTXPayload
MTXPayload.name             = "Reverse shell"
MTXPayload.description      = "Build a reverse shell and execute it on victim"
MTXPayload.author           = "Chabox"
MTXPayload.options["RLIB"] = {"required": 1, "default": "net.so", "description": "library full name in the remote computer to exploit"}
MTXPayload.options["RPATH"] = {"required": 1, "default": "/home/guest", "description": "exploit path to run the payload in the remot computer"}

MTXPayload.run = function(remote_object, local_shell, options)
	rlib = options.RLIB
	rpath = options.RPATH
    if typeof(remote_object) != "shell" then return print_error("Payload works with shell sessions only")
    old_sessions = metaxploit.rshell_server
    metaxploit_path = current_path + "/metaxploit.so"
    if not local_shell.host_computer.File(metaxploit_path) then
        metaxploit_path = "/lib/metaxploit.so"
    end if
    rev_shell_code = "local_metaxploit = include_lib(current_path + ""/metaxploit.so"") lib_file = get_shell.host_computer.File(""/lib/init.so"") if lib_file then print(""lib found dumping........."") else	return print(""lib not found"") end if get_custom_object.pmetalib = local_metaxploit.load(""/lib/init.so"") if metalib then	 print(""lib loaded successfully :)"") else	return print(""metalib error"") end if return metalib"
    print_info("Wrtite reverse shell code")
    local_shell.host_computer.touch("/usr/share/mtx/build", "rev_shell.src")
    local_shell.host_computer.File("/usr/share/mtx/build/rev_shell.src").set_content(rev_shell_code)
    print_info("Build reverse shell")
    local_shell.build("/usr/share/mtx/build/rev_shell.src", "/usr/share/mtx/build")
    print_info("Upload metaxploit library to victim")
    local_shell.scp(metaxploit_path, rpath, remote_object)
    print_info("Upload reverse shell binary to victim")
    local_shell.scp("/usr/share/mtx/build/rev_shell", rpath, remote_object)
    print_info("Launch reverse shell binary on victim")
    remote_object.launch(rpath+"/rev_shell")
	file = remote_object.host_computer.File(rpath+"/rev_shell")
	if file then
		file.delete
	else
		print_error("failed")
	end if
	file_ =remote_object.host_computer.File(rpath+"/metaxploit.so")
	if file_ then
		file_.delete
	else
		print_error("failed")
	end if
	print_good("Scanning metalib")
	print_info(get_custom_object.pmetalib)	
end function